// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/image/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve la metadata y URL de una imagen del usuario autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Obtener informaci칩n de una imagen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la imagen",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ImageDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/images/{rest}": {
            "get": {
                "description": "Devuelve el archivo de imagen almacenado en el servidor desde la carpeta local \"uploads\", sin exponer su ruta real.",
                "produces": [
                    "image/jpeg",
                    "image/png",
                    "image/gif"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Servir imagen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ruta relativa de la imagen (por ejemplo: user123/imagen.jpg)",
                        "name": "rest",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Acceso prohibido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Archivo no encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica al usuario y devuelve un token JWT si las credenciales son correctas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Inicia sesi칩n",
                "parameters": [
                    {
                        "description": "Credenciales de usuario",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Crea un nuevo usuario en la base de datos con nombre de usuario y contrase침a.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registra un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos del usuario a registrar",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permite a un usuario autenticado subir una imagen. Se guarda en el servidor y se almacena la metadata.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Sube una imagen",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Imagen a subir (jpg, jpeg, png, gif)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Descripci칩n del error"
                }
            }
        },
        "models.ImageDetailResponse": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "example": "jpeg"
                },
                "height": {
                    "type": "integer",
                    "example": 1080
                },
                "name": {
                    "type": "string",
                    "example": "imagen123.jpg"
                },
                "size": {
                    "type": "integer",
                    "example": 204800
                },
                "url": {
                    "type": "string",
                    "example": "http://localhost:8080/images/rodrick/imagen123.jpg"
                },
                "width": {
                    "type": "integer",
                    "example": 1920
                }
            }
        },
        "models.ResponseLogin": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.UploadResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/definitions/models.UploadedImageDetail"
                },
                "message": {
                    "type": "string",
                    "example": "Imagen subida exitosamente"
                }
            }
        },
        "models.UploadedImageDetail": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "example": "jpeg"
                },
                "height": {
                    "type": "integer",
                    "example": 1080
                },
                "name": {
                    "type": "string",
                    "example": "imagen123.jpg"
                },
                "size": {
                    "type": "integer",
                    "example": 204800
                },
                "url": {
                    "type": "string",
                    "example": "http://localhost:8080/images/rodrick/imagen123.jpg"
                },
                "width": {
                    "type": "integer",
                    "example": 1920
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API de Procesamiento de Im치genes",
	Description:      "Esta es una API para subir, transformar y consultar im치genes.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
